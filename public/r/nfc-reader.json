{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "nfc-reader",
  "type": "registry:component",
  "title": "NFC Reader",
  "description": "A component for reading NFC tags",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/nfc-reader/nfc-reader.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport { Smartphone } from \"lucide-react\"\nimport { useEffect, useState } from \"react\"\n\ninterface NFCTag {\n    serialNumber?: string\n    recordCount?: number\n    records?: Array<{\n        recordType: string\n        mediaType?: string\n        data?: any\n        encoding?: string\n        lang?: string\n    }>\n    message?: string\n}\n\ninterface NFCReaderProps {\n    onScanStart?: () => void\n    onScanStop?: () => void\n    onScanSuccess?: (data: NFCTag) => void\n    onError?: (error: string) => void\n}\n\nexport default function NFCReader({ onScanStart, onScanStop, onScanSuccess, onError }: NFCReaderProps) {\n    const [isNFCSupported, setIsNFCSupported] = useState<boolean | null>(null)\n    const [isScanning, setIsScanning] = useState(false)\n\n    // Check if NFC is supported\n    useEffect(() => {\n        if (\"NDEFReader\" in window) {\n            setIsNFCSupported(true)\n        } else {\n            setIsNFCSupported(false)\n        }\n    }, [])\n\n    const startScan = async () => {\n        if (!isNFCSupported) return\n\n        setIsScanning(true)\n        onScanStart?.()\n\n        try {\n            // @ts-ignore - TypeScript doesn't know about NDEFReader yet\n            const ndef = new window.NDEFReader()\n\n            await ndef.scan()\n\n            ndef.addEventListener(\"reading\", ({ message, serialNumber }: { message: any; serialNumber: string }) => {\n                const records = Array.from(message.records).map((record: any) => {\n                    let data\n                    try {\n                        if (record.recordType === \"text\") {\n                            const textDecoder = new TextDecoder(record.encoding)\n                            data = textDecoder.decode(record.data)\n                        } else if (record.recordType === \"url\") {\n                            const textDecoder = new TextDecoder()\n                            data = textDecoder.decode(record.data)\n                        } else {\n                            data = \"Data in unsupported format\"\n                        }\n                    } catch (e) {\n                        data = \"Error decoding data\"\n                    }\n\n                    return {\n                        recordType: record.recordType,\n                        mediaType: record.mediaType,\n                        data,\n                        encoding: record.encoding,\n                        lang: record.lang,\n                    }\n                })\n\n                const nfcData = {\n                    serialNumber,\n                    recordCount: message.records.length,\n                    records,\n                }\n\n                onScanSuccess?.(nfcData)\n                setIsScanning(false)\n                onScanStop?.()\n            })\n\n            ndef.addEventListener(\"error\", (error: Error) => {\n                onError?.(error.message)\n                setIsScanning(false)\n                onScanStop?.()\n            })\n        } catch (error) {\n            onError?.(error instanceof Error ? error.message : \"Unknown error occurred\")\n            setIsScanning(false)\n            onScanStop?.()\n        }\n    }\n\n    const stopScan = () => {\n        setIsScanning(false)\n        onScanStop?.()\n    }\n\n    return (\n        <Button\n            onClick={isScanning ? stopScan : startScan}\n            disabled={isNFCSupported === false}\n            className=\"w-full\"\n            aria-label={isScanning ? \"Stop scanning\" : \"Start scanning for NFC tags\"}\n        >\n            <Smartphone className=\"mr-2 h-4 w-4\" />\n            {isScanning ? \"Stop Scanning\" : \"Scan NFC Tag\"}\n        </Button>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}